_.clone = function (r)
{
    return void 0 === r ? r : JSON.parse(JSON.stringify(r))
}, _.parameter = function (r, t)
{
    return t = t || location.search, decodeURIComponent((new RegExp("[?|&]" + r + "=([^&;]+?)(&|#|;|$)").exec(t) || [, ""])[1].replace(/\+/g, "%20")) || null
}, _.numberWithCommas = function (r)
{
    return r.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
}, _.average = function (r)
{
    if (0 == r.length) return null;
    if (1 == r.length) return r[0];
    for (var t = r[0], n = 1; n < r.length; n++) t += r[n];
    return t / r.length
}, _.sd = function (r, t)
{
    void 0 === t && (t = _.average(r));
    var n = 0;
    if (r.length >= 2)
    {
        for (var e = 0; e < r.length; e++) n += (r[e] - t) * (r[e] - t);
        return Math.sqrt(1 / (r.length - 1) * n)
    }
    return 0
}, JDtoDateArray = function ()
{
    var r = 4716,
        t = 1401,
        n = 2,
        e = 12,
        o = 4,
        a = 1461,
        l = 3,
        f = 5,
        u = 153,
        h = 2,
        i = 274277,
        c = -38;
    return function (g)
    {
        var v = g + t + Math.floor(3 * Math.floor((4 * g + i) / 146097) / 4) + c,
            M = o * v + l,
            d = Math.floor(M % a / o),
            p = f * d + h,
            s = Math.floor(p % u / f) + 1,
            _ = (Math.floor(p / u) + n) % e + 1,
            m = Math.floor(M / a) - r + Math.floor((e + n - _) / e);
        return [s, _, m]
    }
}();
